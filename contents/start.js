class StartContent extends MC {
  constructor(_p, _s, vdomID) {
    super();
  }

  render() {
    return container(
      $("<div>").append(
        articleWrapper(
          sectionTitle("Введение"),
          heading1("Что такое Micro Component?"),
          textP(
            "Micro Component (MC) — это инструмент для построения интерфейсов в среде jQuery, который сочетает декларативный рендеринг и реактивное управление состоянием. В отличие от классических jQuery-плагинов, MC оперирует не только DOM-узлами, но и виртуальными представлениями компонентов, что позволяет минимизировать перерисовки и лучше структурировать код."
          ),
          textP(
            "MC не является самостоятельным фреймворком общего назначения. Его назначение — обеспечить базовые механизмы управления состояниями, связями и обновлениями элементов пользовательского интерфейса, сохраняя при этом совместимость с уже существующими jQuery-кодом и библиотеками."
          ),
          heading2("Основные принципы работы"),
          spacer("10px"),
          ulList([
            "<strong>Состояние:</strong> данные, связанные с компонентом или глобальным контекстом - инициируют обновление интерфейса.",
            "<strong>Компоненты:</strong> классы или функции, возвращающие структуру интерфейса. Каждый компонент может иметь локальные и глобальные состояния.",
            "<strong>Эффекты:</strong> подписки на изменение состояний, позволяющие выполнять логику при обновлениях.",
            "<strong>Diff-механизм:</strong> сравнение текущего и нового состояния DOM и применение минимальных изменений, вместо полной перерисовки.",
          ]),
          heading2("Область применения"),
          textP(
            "Micro Component может использоваться в проектах, где уже применяется jQuery, но требуется более формальная модель управления интерфейсом. Он подходит для постепенной модернизации существующего кода без полной миграции на сторонние фреймворки."
          ),
          spacer("10px"),
          ulList([
            "Прототипы и внутренние инструменты, где важна простота интеграции.",
            "Системы с наследием на jQuery, требующие реактивного обновления интерфейса.",
            "Средние по размеру приложения, где нет необходимости в полномасштабных решениях вроде React или Vue.",
          ])
        )
      )
    );
  }
}
